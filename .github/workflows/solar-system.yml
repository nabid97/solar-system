name: Solar System Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature-*'

env:
  MONGO_URI: 'mongodb+srv://${{ secrets.MONGO_USERNAME }}:${{ secrets.MONGO_PASSWORD }}@supercluster.d83jj.mongodb.net/superData'

jobs:
  unit-testing:
    name: Unit Testing
    strategy:
      matrix:
        nodejs_version: [20, 22]
        operating_system: [ubuntu-latest, windows-latest]
        exclude:
          - nodejs_version: 20
            operating_system: windows-latest
    runs-on: ${{ matrix.operating_system }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version - ${{ matrix.nodejs_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.nodejs_version }}
      
      - name: Cache
        uses: actions/cache@v4.2.0
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
      
      - name: Install Dependencies
        run: npm ci

      - name: Unit Testing
        id: nodejs-unit-testing
        run: npm test

      - name: Archive Test Result
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Mocha-Test-Result
          path: test-results.xml

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version - 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
      
      - name: Cache
        uses: actions/cache@v4.2.0
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
      
      - name: Install Dependencies
        run: npm ci

      - name: Check Code Coverage
        continue-on-error: true
        run: npm run coverage

      - name: Archive Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 2

  docker:
    needs: [unit-testing, code-coverage]
    if: always()
    name: Containerization
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Docker Build For Testing
        uses: docker/build-push-action@v6.10.0
        with:
          context: .
          push: false
          tags: ${{ vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}

      - name: Docker Image Testing
        run: |
           docker images
           docker run --name solar-system-app -d \
                -p 3000:3000 \
                -e MONGO_URI=$MONGO_URI \
                -e MONGO_USERNAME=$MONGO_USERNAME \
                -e MONGO_PASSWORD=$MONGO_PASSWORD \
                ${{ vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}

      - name: Docker Registry Push 
        uses: docker/build-push-action@v6.10.0
        with:
          context: .
          push: true
          tags: |
               ${{ vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}
               ghcr.io/${{github.repository_owner}}/solar-system:${{github.sha}}
